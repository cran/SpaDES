% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simList-accessors.R
\docType{methods}
\name{.callingModuleName}
\alias{.callingFrameTimeunit}
\alias{.callingFrameTimeunit,.simList-method}
\alias{.callingFrameTimeunit,NULL-method}
\alias{.callingModuleName}
\alias{.callingModuleName,.simList-method}
\alias{currentModule}
\alias{currentModule,.simList-method}
\title{Namespacing within SpaDES}
\usage{
.callingModuleName(object)

\S4method{.callingModuleName}{.simList}(object)

currentModule(object)

\S4method{currentModule}{.simList}(object)

.callingFrameTimeunit(x)

\S4method{.callingFrameTimeunit}{.simList}(x)

\S4method{.callingFrameTimeunit}{`NULL`}(x)
}
\arguments{
\item{object}{A \code{simList} simulation object.}

\item{x}{A \code{simList} simulation object.}
}
\description{
\code{.callingModuleName} returns the name of the module that is currently
the active module calling functions like \code{scheduleEvent}.
This will only return the module name if it is inside a \code{spades}
function call, i.e., it will return \code{NULL} if used in interactive mode.
The related function \code{currentModule} is simply a rapid accessor for the
current module name. This latter will return the module that is in the current
event queue, which will never be \code{NULL}
}
\author{
Eliot McIntire

Eliot McIntire
}
\keyword{internal}

